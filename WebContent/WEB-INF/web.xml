<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" 
xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">

    <context-param> <!--全局范围内环境参数初始化-->  
		<param-name>contextConfigLocation</param-name>          <!--参数名称-->  
		<param-value>
			/WEB-INF/spring/root-context.xml
			/WEB-INF/spring/spring-cms-interceptors.xml
		</param-value>     <!--参数取值-->  
	</context-param>  

<!--以下配置的加载顺序:先 ServletContext >> context-param >> listener >> filter >> servlet >>  spring --> 
<!--过滤器配置-->
    <!--例:编码过滤器-->  
    <filter>      <!-- 用来声明filter的相关设定,过滤器可以截取和修改一个Servlet或JSP页面的请求或从一个Servlet或JSP页面发出的响应-->  
        <filter-name>encodingFilter</filter-name>     <!--指定filter的名字-->  
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class> <!--定义filter的类的名称-->  
        <async-supported>true</async-supported>     <!--设置是否启用异步支持-->  
        <init-param><!--用来定义参数,若在Servlet可以使用下列方法来获得:String param_name=getServletContext().getInitParamter("param-name里面的值");-->  
            <param-name>encoding</param-name>   <!--参数名称-->  
            <param-value>UTF-8</param-value> <!--参数值-->  
        </init-param>  
    </filter>  
    <filter-mapping><!--用来定义filter所对应的URL-->  
        <filter-name>encodingFilter</filter-name>     <!--指定对应filter的名字-->  
        <url-pattern>/*</url-pattern>       <!--指定filter所对应的URL-->  
    </filter-mapping>  

<!--监听器配置-->  
    <!--例:spring监听器-->  
    <listener>        <!--用来设定Listener接口-->  
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class><!--定义Listener的类名称-->  
    </listener>  
    <!-- 防止Spring内存溢出监听器  -->  
    <listener>  
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>  
    </listener>  
    
<!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
    

<!--会话超时配置（单位为分钟）-->  
    <session-config><!--如果某个会话在一定时间未被访问，则服务器可以扔掉以节约内存-->  
        <session-timeout>30</session-timeout>  
    </session-config> 
  
<!--欢迎页面配置  -->  
    <welcome-file-list><!--定义首页列单.-->  
         <!--用来指定首页文件名称.我们可以用<welcome-file>指定几个首页,而服务器会依照设定的顺序来找首页.-->  
        <welcome-file>/index.html</welcome-file> 
    </welcome-file-list>  

    <!-- 出错页面定义 -->
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/common/500.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/common/500.jsp</location>
	</error-page>
	<error-page>
		<error-code>405</error-code>
		<location>/common/405.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/common/404.jsp</location>
	</error-page>
	<error-page>
		<error-code>403</error-code>
		<location>/common/403.jsp</location>
	</error-page>
  <display-name>mycms</display-name>
</web-app>